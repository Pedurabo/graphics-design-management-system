apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-services
  namespace: graphics-app
  labels:
    app: ai-services
    version: v1
    team: ai-cluster
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ai-services
  template:
    metadata:
      labels:
        app: ai-services
        team: ai-cluster
    spec:
      containers:
      - name: ai-services
        image: ghcr.io/graphics-app/ai-services:IMAGE_TAG
        ports:
        - containerPort: 5000
        resources:
          requests:
            memory: "1Gi"
            cpu: "1000m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /ready
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        env:
        - name: PYTHON_ENV
          value: "staging"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: url
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: MODEL_PATH
          value: "/app/models"
        - name: DATASET_PATH
          value: "/app/datasets"
        volumeMounts:
        - name: models-volume
          mountPath: /app/models
        - name: datasets-volume
          mountPath: /app/datasets
      volumes:
      - name: models-volume
        persistentVolumeClaim:
          claimName: models-pvc
      - name: datasets-volume
        persistentVolumeClaim:
          claimName: datasets-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: ai-services-service
  namespace: graphics-app
  labels:
    app: ai-services
    team: ai-cluster
spec:
  selector:
    app: ai-services
  ports:
  - port: 5000
    targetPort: 5000
    protocol: TCP
  type: ClusterIP 